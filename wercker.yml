box:
  id: dbmedialab/nodejs-openjdk
  cmd: /bin/bash -l

services:
  - name: redis
    id: redis:3.2
  - mongo: mongo
    id: mongo:3.0

js-lint-build-test:
  steps:
  - script:
    name: set dependency cache
    code: npm config set cache $WERCKER_CACHE_DIR/wercker/npm
  - script:
    name: install dependencies
    code: npm install
  - script:
    name: lint
    code: run/lint
  - script:
    name: check node
    code: node --version
  - script:
    name: build
    code: run/build
  - script:
    name: set environment
    code: |
      export AUTH_JWT_SECRET="abcd1234cdef5678abcd1234cdef5678abcd1234cdef5678abcd1234cdef5678"
      export AUTH_SESSION_SECRET="0000cafe1111abcd0000cafe1111abcd0000cafe1111abcd0000cafe1111abcd"
      export MONGODB_URL="mongodb://$MONGO_PORT_27017_TCP_ADDR:$MONGO_PORT_27017_TCP_PORT/readercritics"
      export REDIS_URL_MESSAGE_QUEUE="redis://$REDIS_PORT_6379_TCP_ADDR:$REDIS_PORT_6379_TCP_PORT/1"
      export REDIS_URL_SESSION_CACHE="redis://$REDIS_PORT_6379_TCP_ADDR:$REDIS_PORT_6379_TCP_PORT/2"
      export SENDGRID_API_KEY="1234abcd"
      export WEB_CONCURRENCY=1
      set | sort
  - script:
    name: test libraries
    code: run/test --libs
  - script:
    name: test base modules
    code: run/test --base
  - script:
    name: test backend app
    code: run/test --app
  - script:
    name: test db services
    code: run/test --db
  #- script:
  #  name: test frontend
  #  code: run/test --frontend
  - script:
    name: copy production files
    code: |
      cp -r assets \
        out \
        run \
        tmp \
        resources \
        templates \
        package.json \
        $WERCKER_OUTPUT_DIR

push-image:
  box:
    id: node:8
    cmd: /bin/sh
  steps:
  - script:
    name: set dependency cache
    code: npm config set cache $WERCKER_CACHE_DIR/wercker/npm
  - script:
    name: install production dependencies
    code: npm install --production
  - internal/docker-push:
    working-dir: $WERCKER_SOURCE_DIR
    username: _json_key
    password: $GCR_DBP_JSON_KEY_FILE
    cmd: ./run_app.sh
    tag: latest,$WERCKER_GIT_COMMIT
    ports: "4000"
    repository: eu.gcr.io/dagbladet-projects/$WERCKER_GIT_REPOSITORY
    registry: https://eu.gcr.io/v2

deploy:
  box:
    id: eu.gcr.io/dagbladet-projects/kubectl
    username: _json_key
    password: $GCR_DBP_JSON_KEY_FILE
    tag: p01
    registry: https://eu.gcr.io
  steps:
  # Setup namespace
  - script:
    name: test and setup environment
    code: |
      initkube
      deploy $WERCKER_GIT_REPOSITORY <<EOL
        reader-critics=eu.gcr.io/dagbladet-projects/$WERCKER_GIT_REPOSITORY:$WERCKER_GIT_COMMIT
      EOL
