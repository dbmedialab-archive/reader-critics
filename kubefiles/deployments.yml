apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{env "REPONAME"}}
  namespace: {{env "REPONAME"}}
spec:
  selector:
    matchLabels:
      app: {{env "REPONAME"}}
  replicas: 2
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: {{env "REPONAME"}}
    spec:
      # Affinity to make sure that multiple pods does not run on the same node
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          # prefer to run in different datacentres
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ env "REPONAME" }}
              topologyKey: failure-domain.beta.kubernetes.io/zone
          # prefer to run on different "physical" nodes
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ env "REPONAME" }}
              topologyKey: kubernetes.io/hostname
        # prefer to run on preemptible instances
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-preemptible
                operator: Exists
      tolerations:
        - key: cloud.google.com/gke-preemptible
          operator: Equal
          value: "true"
          effect: NoSchedule
      containers:
        - name: {{env "REPONAME"}}
          image: {{env "IMAGE"}}
          command: ["npm"]
          args: ["start"]
          ports:
          - containerPort: 4000
            name: http-port
          envFrom:
            - secretRef:
                name: secrets
            - configMapRef:
                name: config
          livenessProbe:
            httpGet:
              path: /api/version
              port: http-port
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/version
              port: http-port
            timeoutSeconds: 5
