#!/bin/bash

set -euo pipefail

if [ "$(uname)" = "Darwin" ]; then
	if brew ls --versions coreutils > /dev/null; then
		# The package is installed
		SCRIPT=$(greadlink -f -- $0)
		CPCMD="gcp -f"
	else
		# The package is not installed
		echo 'no coreutils found. install it with `brew install coreutils`'
		exit 1
	fi
else
	# assume linux, windows will never be true computing
	SCRIPT=$(readlink -f -- $0)
	CPCMD="cp -f"
fi

CIRCLECI_FILE=config.yml
LOCAL_FILE=local_config.yml
SCRIPTPATH=$(dirname $SCRIPT)
SCRIPTNAME=$(basename $SCRIPT)
DIR=$(mktemp -d)

# Let ci selfcheck clone via https
mode=${1:-}

trap "rm -rf $DIR" INT HUP TERM EXIT

echo "* cloning upstream ci alias definitions"
if [ "x$mode" = "xci" ]; then
	git clone -q https://github.com/dbmedialab/ci $DIR/ci
else
	git clone -q git@github.com:dbmedialab/ci $DIR/ci
fi

CONFIG_VERSION="2"
PARAMS=""
while (( "$#" )); do
  case "$1" in
    -c|--config-version)
      CONFIG_VERSION=$2
      shift 2
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "$PARAMS"

cd $SCRIPTPATH

cat << EOF > $CIRCLECI_FILE
### NOTICE: ALL CHANGES TO THIS FILE WILL BE OVERWRITTEN ###
#
# This file is generated by running $0 inside your
# .circleci config folder, alongside your $LOCAL_FILE
#
# Customizations in local_config.yml will end up here on regeneration
#
# All anchor definitions live in
# https://github.com/dbmedialab/ci/blob/master/common_aliases.yml
#

version: $CONFIG_VERSION

EOF

# inject common aliases
cat $DIR/ci/common_aliases.yml >> $CIRCLECI_FILE

cat << EOF >> $CIRCLECI_FILE

#########################################################################
#
# Anything below this line comes from $LOCAL_FILE inside the project
#
#########################################################################

EOF

# local config
cat local_config.yml >> $CIRCLECI_FILE

echo "* generated config.yml from local and remote config"

# compare md5sums of running and upstream scripts, replace if diff
if [[ "$(cat $SCRIPT | md5sum)" != "$(cat $DIR/ci/$SCRIPTNAME | md5sum)" ]]; then
	echo "* updating local $0"
	$CPCMD $DIR/ci/$SCRIPTNAME $SCRIPT
fi

cd - > /dev/null

