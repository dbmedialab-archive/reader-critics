### NOTICE: ALL CHANGES TO THIS FILE WILL BE OVERWRITTEN ###
#
# This file is generated by running ./generate-circleci-config inside your
# .circleci config folder, alongside your local_config.yml
#
# Customizations in local_config.yml will end up here on regeneration
#
# All anchor definitions live in
# https://github.com/dbmedialab/ci/blob/master/common_aliases.yml
#

version: 2

common_aliases:
  # default workflow is deploy master to production, develop to stage, anything else to test
  # test will disappear, and PR will be deployed to stage in a pr-$app namespace
  - &default_workflows
      version: 2
      build-stage:
        jobs:
          - build:
              context: "org-global"
          - deploy_prod:
              context: "org-global"
              requires:
                - build
              filters:
                branches:
                  only: master
          - deploy_stage:
              context: "org-global"
              requires:
                - build
              filters:
                branches:
                  only: develop
          - deploy_test:
              context: "org-global"
              requires:
                - build
              filters:
                branches:
                  ignore:
                    - master
                    - develop

  # --- deploy steps --- #
  # "experimental" steps will use the develop branch of the deploy container. you probably don't want this
  - &deploy_prod
    machine: true
    steps:
      - checkout
      - run: env
      - run: docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
      - run: docker run -v /home/circleci/project/kubefiles:/kubefiles -e ENV=prod  -e IMAGE=$GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -e CIRCLE_PROJECT_REPONAME -e CIRCLE_REPOSITORY_URL -e CIRCLE_COMPARE_URL -e CIRCLE_BUILD_URL -e CIRCLE_USERNAME $GCR/kubectl:production

  - &deploy_stage
    machine: true
    steps:
      - checkout
      - run: env
      - run: docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
      - run: docker run -v /home/circleci/project/kubefiles:/kubefiles -e ENV=stage -e IMAGE=$GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -e CIRCLE_PROJECT_REPONAME -e CIRCLE_REPOSITORY_URL -e CIRCLE_COMPARE_URL -e CIRCLE_BUILD_URL -e CIRCLE_USERNAME $GCR/kubectl:production

  - &deploy_test
    machine: true
    steps:
      - checkout
      - run: env
      - run: docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
      - run: docker run -v /home/circleci/project/kubefiles:/kubefiles -e ENV=test  -e IMAGE=$GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -e CIRCLE_PROJECT_REPONAME -e CIRCLE_REPOSITORY_URL -e CIRCLE_COMPARE_URL -e CIRCLE_BUILD_URL -e CIRCLE_USERNAME $GCR/kubectl:production

  - &deploy_prod_experimental
    machine: true
    steps:
      - checkout
      - run: env
      - run: docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
      - run: docker run -v /home/circleci/project/kubefiles:/kubefiles -e ENV=prod  -e IMAGE=$GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -e CIRCLE_PROJECT_REPONAME -e CIRCLE_REPOSITORY_URL -e CIRCLE_COMPARE_URL -e CIRCLE_BUILD_URL -e CIRCLE_USERNAME $GCR/kubectl:develop

  - &deploy_stage_experimental
    machine: true
    steps:
      - checkout
      - run: env
      - run: docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
      - run: docker run -v /home/circleci/project/kubefiles:/kubefiles -e ENV=stage -e IMAGE=$GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -e CIRCLE_PROJECT_REPONAME -e CIRCLE_REPOSITORY_URL -e CIRCLE_COMPARE_URL -e CIRCLE_BUILD_URL -e CIRCLE_USERNAME $GCR/kubectl:develop

  - &deploy_test_experimental
    machine: true
    steps:
      - checkout
      - run: env
      - run: docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
      - run: docker run -v /home/circleci/project/kubefiles:/kubefiles -e ENV=test  -e IMAGE=$GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 -e CIRCLE_PROJECT_REPONAME -e CIRCLE_REPOSITORY_URL -e CIRCLE_COMPARE_URL -e CIRCLE_BUILD_URL -e CIRCLE_USERNAME $GCR/kubectl:develop

  # --- steps to plug in your build --- #
  #
  - &container_defaults
    working_directory: /app
    docker:
      - image: docker:17.09.0-ce-git

  - &setup_remote_docker
      setup_remote_docker:
        version: 17.09.0-ce-git
        docker_layer_caching: true

  - &install_docker_compose
    run:
      name: Install Docker Compose
      command: |
        set -x
        curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

  - &docker_build
    run:
      name: Build and tag docker image
      command: |
        docker build -t app .
        docker tag app $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
        docker tag app $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH

  - &docker_push_gcr
    run:
      name: Push docker image
      command: |
        docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
        docker push $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
        docker push $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH

  - &setup_tests
      run:
        name: Create folder for tests output
        command: |
          mkdir -p $CIRCLE_WORKING_DIRECTORY/reports/junit

  - &store_test_results
    store_test_results:
      path: reports/junit/

  - &store_test_artifacts
    store_artifacts:
      path: reports/junit/


#########################################################################
#
# Anything below this line comes from local_config.yml inside the project
#
#########################################################################

version: 2

jobs:
  build:
    <<: *container_defaults
    steps:
      - checkout
      - run: apk add --no-cache curl
      - <<: *install_docker_compose
      - <<: *setup_remote_docker
      - <<: *docker_build
      - <<: *setup_tests
      - run:
          name: Tests
          command: |
            set -x
            docker login -u _json_key -p "$GCR_CREDENTIALS" https://eu.gcr.io
            docker-compose -f docker-compose.ci.yml up -d
            docker run --network container:app $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_P  ROJECT_REPONAME:$CIRCLE_SHA1 run/test --libs
            docker run --network container:app $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_P  ROJECT_REPONAME:$CIRCLE_SHA1 run/test --base
            docker run --network container:app $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_P  ROJECT_REPONAME:$CIRCLE_SHA1 run/test --app
            docker run --network container:app $GCR/$CIRCLE_PROJECT_REPONAME/$CIRCLE_P  ROJECT_REPONAME:$CIRCLE_SHA1 run/test --db
      - <<: *docker_push_gcr

  deploy_prod:  *deploy_prod
  deploy_stage: *deploy_stage
  deploy_test:  *deploy_test

workflows: *default_workflows
